---
openapi: 3.0.3
info:
  title: FleetYards.net Command API
  version: v1
  license:
    name: GNU General Public License v3.0
    url: https://github.com/fleetyards/fleetyards/blob/main/LICENSE
  x-logo:
    url: https://fleetyards.net/docs/logo.png
    altText: FleetYards.net logo
servers:
- url: http://admin.fleetyards.test/api/v1
  description: Dev Server
- url: http://admin.fleetyards.test/api/v1
  description: Production Server
- url: https://admin.fleetyards.dev/api/v1
  description: Staging Server
security:
- SessionCookie: []
paths:
  "/admin_users/me":
    get:
      summary: My Data
      operationId: me
      tags:
      - AdminUsers
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminUser"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/components":
    get:
      summary: Components list
      operationId: components
      tags:
      - Components
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 50
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ComponentQuery"
        style: deepObject
        explode: true
        required: false
      - name: cacheId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Components"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/images":
    post:
      summary: Image create
      operationId: createImage
      tags:
      - Images
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Image"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ImageInputCreate"
    get:
      summary: Images list
      operationId: images
      description: Get a List of Images
      tags:
      - Images
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 30
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ImageQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Images"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/images/{id}":
    parameters:
    - name: id
      in: path
      schema:
        type: string
        format: uuid
      description: id
      required: true
    delete:
      summary: Image destroy
      operationId: destroyImage
      tags:
      - Images
      responses:
        '204':
          description: successful
        '404':
          description: not_found
        '401':
          description: unauthorized
    put:
      summary: Image update
      operationId: updateImage
      tags:
      - Images
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Image"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '404':
          description: not_found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ImageInput"
  "/imports":
    get:
      summary: Imports list
      operationId: imports
      description: Get a List of Imports
      tags:
      - Imports
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 25
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ImportQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Imports"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/imports/{id}":
    parameters:
    - name: id
      in: path
      schema:
        type: string
        format: uuid
      description: id
      required: true
    get:
      summary: Import Detail
      operationId: import
      tags:
      - Imports
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Import"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/item-prices":
    post:
      summary: Create new Item Price
      operationId: createItemPrice
      tags:
      - ItemPrices
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemPrice"
        '400':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemPriceInput"
        required: true
    get:
      summary: Item Prices list
      operationId: itemPrices
      tags:
      - ItemPrices
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 25
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ItemPriceQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemPrices"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/item-prices/{id}":
    parameters:
    - name: id
      in: path
      schema:
        type: string
        format: uuid
      description: id
      required: true
    delete:
      summary: Item price destroy
      operationId: destroyItemPrice
      tags:
      - ItemPrices
      responses:
        '204':
          description: successful
        '404':
          description: not_found
        '401':
          description: unauthorized
    get:
      summary: Get Item Price
      operationId: itemPrice
      tags:
      - ItemPrices
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemPrice"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
    put:
      summary: Update Item Price
      operationId: updateItemPrice
      tags:
      - ItemPrices
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemPrice"
        '400':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationError"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemPriceInput"
        required: true
  "/manufacturers":
    get:
      summary: Manufacturers list
      operationId: manufacturers
      tags:
      - Manufacturers
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 30
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ManufacturerQuery"
        style: deepObject
        explode: true
        required: false
      - name: cacheId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Manufacturers"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/manufacturers/{id}":
    parameters:
    - name: id
      in: path
      schema:
        type: string
        format: uuid
      description: Manufacturer id
      required: true
    get:
      summary: Manufacturer Detail
      operationId: manufacturer
      tags:
      - Manufacturers
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Manufacturer"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/models/production-states":
    get:
      summary: Model Production states
      operationId: modelProductionStates
      tags:
      - Models
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FilterOption"
  "/models":
    get:
      summary: Models list
      operationId: models
      tags:
      - Models
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 30
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ModelQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Models"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/model-paints":
    get:
      summary: Paints list
      operationId: paints
      tags:
      - Models
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 30
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/ModelPaintQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelPaints"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/models/{id}":
    parameters:
    - name: id
      in: path
      description: Model id
      schema:
        type: string
        format: uuid
      required: true
    get:
      summary: Model Detail
      operationId: model
      tags:
      - Models
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelExtended"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
    put:
      summary: Update Model
      operationId: updateModel
      tags:
      - Models
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelExtended"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModelUpdateInput"
        required: true
  "/sessions":
    post:
      summary: create session
      operationId: createSession
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardMessage"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SessionInput"
        required: true
    delete:
      summary: Destroy Session
      operationId: destroySession
      tags:
      - Sessions
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stats/most-viewed-pages":
    get:
      summary: Stats most viewed Pages
      operationId: mostViewedPages
      tags:
      - Stats
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BarChartStats"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stats/registrations-per-month":
    get:
      summary: Stats Registrations per Month
      operationId: registrationsPerMonth
      tags:
      - Stats
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BarChartStats"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stats/quick-stats":
    get:
      summary: Stats
      operationId: stats
      tags:
      - Stats
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Stats"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stats/visits-per-day":
    get:
      summary: Stats Visits per Day
      operationId: visitsPerDay
      tags:
      - Stats
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BarChartStats"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stats/visits-per-month":
    get:
      summary: Stats Visits per Month
      operationId: visitsPerMonth
      tags:
      - Stats
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BarChartStats"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/users":
    get:
      summary: Users list
      operationId: users
      tags:
      - Users
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 25
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/UserQuery"
        style: deepObject
        explode: true
        required: false
      - name: cacheId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Users"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/vehicles":
    get:
      summary: Vehicles list
      operationId: vehicles
      tags:
      - Vehicles
      parameters:
      - "$ref": "#/components/parameters/PageParameter"
      - name: perPage
        in: query
        schema:
          type: string
          default: 30
        required: false
      - "$ref": "#/components/parameters/SortingParameter"
      - name: q
        in: query
        schema:
          type: object
          "$ref": "#/components/schemas/VehicleQuery"
        style: deepObject
        explode: true
        required: false
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Vehicles"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
components:
  parameters:
    PageParameter:
      name: page
      in: query
      schema:
        type: string
        default: '1'
      required: false
    SortingParameter:
      name: s
      in: query
      schema:
        type: array
        items:
          type: string
      description: Sorting
      required: false
  schemas:
    BarChartStats:
      type: object
      properties:
        label:
          type: string
        count:
          type: integer
        tooltip:
          type: string
      additionalProperties: false
      required:
      - label
      - count
      - tooltip
      title: BarChartStats
    BaseList:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
      additionalProperties: false
      required:
      - items
      - meta
      title: BaseList
    CargoHold:
      type: object
      properties:
        dimensions:
          "$ref": "#/components/schemas/CargoHoldDimension"
        capacity:
          type: integer
        maxContainerSize:
          "$ref": "#/components/schemas/CargoHoldContainerSize"
        limits:
          type: object
          properties:
            min:
              "$ref": "#/components/schemas/CargoHoldLimit"
            max:
              "$ref": "#/components/schemas/CargoHoldLimit"
          additionalProperties: false
          required:
          - min
      additionalProperties: false
      required:
      - dimensions
      - capacity
      - maxContainerSize
      - limits
      title: CargoHold
    CargoHoldContainerSize:
      type: object
      properties:
        size:
          type: integer
        dimensions:
          "$ref": "#/components/schemas/CargoHoldDimension"
      additionalProperties: false
      required:
      - size
      - dimensions
      title: CargoHoldContainerSize
    CargoHoldDimension:
      type: object
      properties:
        x:
          type: number
        "y":
          type: number
        z:
          type: number
      additionalProperties: false
      required:
      - x
      - "y"
      - z
      title: CargoHoldDimension
    CargoHoldLimit:
      type: object
      properties:
        dimensions:
          "$ref": "#/components/schemas/CargoHoldDimension"
        capacity:
          type: integer
      additionalProperties: false
      required:
      - dimensions
      - capacity
      title: CargoHoldLimit
    Check:
      type: object
      properties:
        taken:
          type: boolean
      additionalProperties: false
      required:
      - taken
      title: Check
    Commodity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        type:
          "$ref": "#/components/schemas/CommodityTypeEnum"
        typeLabel:
          type: string
        availability:
          type: object
          properties:
            listedAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
          additionalProperties: false
          required:
          - listedAt
          - boughtAt
          - soldAt
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageIsFallback:
          type: boolean
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - availability
      - media
      - createdAt
      - updatedAt
      title: Commodity
    Component:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        scKey:
          type: string
        scRef:
          type: string
        hidden:
          type: boolean
        category:
          type: string
        type:
          type: string
        subType:
          type: string
        inventoryConsumption:
          type: string
        grade:
          type: string
        gradeLabel:
          type: string
        size:
          type: string
        itemClass:
          "$ref": "#/components/schemas/ComponentItemClassEnum"
        itemClassLabel:
          type: string
        availability:
          type: object
          properties:
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
          additionalProperties: false
          required:
          - boughtAt
          - soldAt
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        typeData:
          anyOf:
          - "$ref": "#/components/schemas/ComponentQuantumDrive"
          - "$ref": "#/components/schemas/CargoHold"
          - "$ref": "#/components/schemas/FuelTank"
          - "$ref": "#/components/schemas/ComponentThruster"
        hardpoints:
          type: array
          items:
            "$ref": "#/components/schemas/Hardpoint"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - hidden
      - availability
      - media
      - createdAt
      - updatedAt
      title: Component
    ComponentQuantumDrive:
      type: object
      properties:
        fuelRate:
          type: number
        jumpRange:
          type: number
        standardJump:
          "$ref": "#/components/schemas/ComponentQuantumDriveJump"
        splineJump:
          "$ref": "#/components/schemas/ComponentQuantumDriveJump"
      additionalProperties: false
      required:
      - fuelRate
      - jumpRange
      - standardJump
      - splineJump
      title: ComponentQuantumDrive
    ComponentQuantumDriveJump:
      type: object
      properties:
        speed:
          type: number
        stage1AccelerationRate:
          type: number
        stage2AccelerationRate:
          type: number
        spoolUpTime:
          type: number
        cooldown:
          type: number
      additionalProperties: false
      required:
      - speed
      - stage1AccelerationRate
      - stage2AccelerationRate
      - spoolUpTime
      - cooldown
      title: ComponentQuantumDriveJump
    ComponentThruster:
      type: object
      properties:
        thrustCapacity:
          type: number
        thrusterType:
          type: string
        thrusterClass:
          "$ref": "#/components/schemas/ThrusterClassEnum"
        fuelBurnRatePer10KNewton:
          type: number
      additionalProperties: false
      required:
      - capacity
      - thrusterType
      - fuelBurnRatePer10KNewton
      title: ComponentThruster
    Components:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Component"
      additionalProperties: false
      required:
      - items
      - meta
      title: Components
    Dock:
      type: object
      properties:
        name:
          type: string
        group:
          type: string
        size:
          "$ref": "#/components/schemas/DockShipSizeEnum"
        sizeLabel:
          type: string
        type:
          "$ref": "#/components/schemas/DockTypeEnum"
        typeLabel:
          type: string
      additionalProperties: false
      required:
      - name
      - size
      - sizeLabel
      - type
      - typeLabel
      title: Dock
    DockCount:
      type: object
      properties:
        count:
          type: integer
        size:
          type: string
        type:
          type: string
        typeLabel:
          type: string
      additionalProperties: false
      required:
      - size
      - count
      - type
      - typeLabel
      title: DockCount
    BoughtViaEnum:
      type: string
      enum:
      - pledge_store
      - ingame
      title: BoughtViaEnum
    CommodityTypeEnum:
      type: string
      enum:
      - gas
      - metal
      - mineral
      - non_metals
      - agricultural_supply
      - food
      - medical_supply
      - processed_goods
      - waste
      - scrap
      - vice
      - harvestable
      - consumer_goods
      title: CommodityTypeEnum
    ComponentClassEnum:
      type: string
      enum:
      - RSIModular
      - RSIWeapon
      - RSIAvionic
      - RSIPropulsion
      - RSIThruster
      title: ComponentClassEnum
    ComponentItemClassEnum:
      type: string
      enum:
      - stealth
      - civilian
      - industrial
      - military
      - competition
      title: ComponentItemClassEnum
    DockShipSizeEnum:
      type: string
      enum:
      - extra_extra_small
      - extra_small
      - small
      - medium
      - large
      - extra_large
      - capital
      title: DockShipSizeEnum
    DockTypeEnum:
      type: string
      enum:
      - vehiclepad
      - garage
      - landingpad
      - dockingport
      - hangar
      title: DockTypeEnum
    EquipmentTypeEnum:
      type: string
      enum:
      - undersuit
      - armor
      - weapon
      - tool
      - clothing
      - medical
      - weapon_attachment
      - hacking_tool
      title: EquipmentTypeEnum
    FleetMembershipRoleEnum:
      type: string
      enum:
      - admin
      - officer
      - member
      title: FleetMembershipRoleEnum
    FleetMembershipShipsFilterEnum:
      type: string
      enum:
      - all
      - hangar_group
      - hide
      title: FleetMembershipShipsFilterEnum
    FleetMembershipStatusEnum:
      type: string
      enum:
      - created
      - invited
      - requested
      - accepted
      - declined
      title: FleetMembershipStatusEnum
    GalleryTypeEnum:
      type: string
      enum:
      - Model
      - Station
      - Album
      title: GalleryTypeEnum
    HabitationTypeEnum:
      type: string
      enum:
      - container
      - small_apartment
      - medium_apartment
      - large_apartment
      - suite
      title: HabitationTypeEnum
    HardpointCategoryEnum:
      type: string
      enum:
      - radar
      - computers
      - scanners
      - powerplant
      - cooler
      - shieldgenerator
      - module
      - salvagefillerstation
      - fueltanks
      - fuel_intakes
      - quantumdrive
      - jumpdrive
      - main_thrusters
      - retro_thrusters
      - vtol_thrusters
      - maneuvering_thrusters
      - weapons
      - weapon_mounts
      - turret
      - missile_racks
      - bombcompartments
      - quantumenforcementdevice
      - emp
      - salvagemunching
      - armor
      - countermeasures
      - selfdestruct
      - lifesupport
      - batteries
      - utility
      - seat
      - relay
      - paints
      - doors
      - cargogrid
      - inventory
      - controller
      - unknown
      title: HardpointCategoryEnum
    HardpointGroupEnum:
      type: string
      enum:
      - avionic
      - system
      - propulsion
      - thruster
      - weapon
      - defense
      - auxiliary
      - seat
      - relay
      - other
      - unknown
      title: HardpointGroupEnum
    HardpointSourceEnum:
      type: string
      enum:
      - ship_matrix
      - game_files
      title: HardpointSourceEnum
    ImportStatusEnum:
      type: string
      enum:
      - created
      - started
      - finished
      - failed
      title: ImportStatusEnum
    ImportTypeEnum:
      type: string
      enum:
      - "::Imports::ModelImport"
      - "::Imports::ModelsImport"
      - "::Imports::ScData::AllImport"
      - "::Imports::ScData::ModelsImport"
      - "::Imports::ScData::ModelImport"
      - "::Imports::HangarSync"
      - "::Imports::HangarImport"
      title: ImportTypeEnum
    ItemPriceItemTypeEnum:
      type: string
      enum:
      - Model
      - ModelModule
      - ModelPaint
      - Component
      title: ItemPriceItemTypeEnum
    ItemPriceTimeRangeEnum:
      type: string
      enum:
      - 1-day
      - 3-days
      - 7-days
      - 30-days
      title: ItemPriceTimeRangeEnum
    ItemPriceTypeEnum:
      type: string
      enum:
      - buy
      - sell
      - rental
      title: ItemPriceTypeEnum
    ModelHardpointCategoryEnum:
      type: string
      enum:
      - main
      - retro
      - vtol
      - fixed
      - gimbal
      - joint
      - manned_turret
      - remote_turret
      - missile_turret
      - missile_rack
      - qed
      - emp
      title: ModelHardpointCategoryEnum
    ModelHardpointGroupEnum:
      type: string
      enum:
      - avionic
      - system
      - propulsion
      - thruster
      - weapon
      title: ModelHardpointGroupEnum
    ModelHardpointSizeEnum:
      type: string
      enum:
      - vehicle
      - one
      - two
      - three
      - four
      - five
      - six
      - seven
      - eight
      - nine
      - ten
      - eleven
      - twelve
      - snub
      - small
      - medium
      - large
      - capital
      - tbd
      title: ModelHardpointSizeEnum
    ModelHardpointSubCategoryEnum:
      type: string
      enum:
      - retro_thrusters
      - vtol_thrusters
      - manned_turrets
      - remote_turrets
      - missile_turret
      title: ModelHardpointSubCategoryEnum
    ModelHardpointTypeEnum:
      type: string
      enum:
      - radar
      - computers
      - fuel_intakes
      - fuel_tanks
      - jump_modules
      - quantum_fuel_tanks
      - power_plants
      - coolers
      - shield_generators
      - quantum_drives
      - main_thrusters
      - maneuvering_thrusters
      - weapons
      - turrets
      - missiles
      - qed
      - emp
      - utility_items
      title: ModelHardpointTypeEnum
    ModelProductionStatusEnum:
      type: string
      enum:
      - in-concept
      - in-production
      - flight-ready
      title: ModelProductionStatusEnum
    OrderDirectionEnum:
      type: string
      enum:
      - asc
      - desc
      title: OrderDirectionEnum
    RsiHangarItemKindEnum:
      type: string
      enum:
      - ship
      - component
      - upgrade
      - skin
      title: RsiHangarItemKindEnum
    SearchResultTypeEnum:
      type: string
      enum:
      - Model
      - Component
      - Shop
      - Station
      - CelestialObject
      - Starsystem
      - Equipment
      - Commodity
      title: SearchResultTypeEnum
    ShopCommodityCategoryEnum:
      type: string
      enum:
      - model
      - equipment
      - commodity
      - component
      - modelmodule
      - modelpaint
      title: ShopCommodityCategoryEnum
    ShopCommodityItemTypeEnum:
      type: string
      enum:
      - Model
      - Equipment
      - Commodity
      - Component
      - ModelModule
      - ModelPaint
      title: ShopCommodityItemTypeEnum
    ShopTypeEnum:
      type: string
      enum:
      - clothing
      - armor
      - weapons
      - components
      - armor_and_weapons
      - superstore
      - ships
      - admin
      - bar
      - hospital
      - salvage
      - resources
      - rental
      - computers
      - blackmarket
      - mining_equipment
      - equipment
      - courier
      - refinery
      - pharmacy
      - cargo
      - souvenirs
      - kiosk
      - ship_customizations
      title: ShopTypeEnum
    StationClassificationEnum:
      type: string
      enum:
      - city
      - trading
      - mining
      - salvaging
      - farming
      - science
      - security
      - rest_stop
      - settlement
      - town
      - drug_lab
      - cargo
      - derelict
      - prison
      - spaceport
      title: StationClassificationEnum
    StationSizeEnum:
      type: string
      enum:
      - small
      - medium
      - large
      title: StationSizeEnum
    StationTypeEnum:
      type: string
      enum:
      - landing_zone
      - station
      - asteroid_station
      - district
      - outpost
      - aid_shelter
      - ugf
      title: StationTypeEnum
    ThrusterClassEnum:
      type: string
      enum:
      - main
      - retro
      - vtol
      - mav
      title: ThrusterClassEnum
    VideoTypeEnum:
      type: string
      enum:
      - youtube
      title: VideoTypeEnum
    Equipment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        availability:
          type: object
          properties:
            listedAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ShopCommodity"
          additionalProperties: false
          required:
          - listedAt
          - boughtAt
          - soldAt
        backpackCompatibility:
          type: string
        coreCompatibility:
          type: string
        damageReduction:
          type: string
        description:
          type: string
        extras:
          type: string
        grade:
          type: string
        itemType:
          type: string
        itemTypeLabel:
          type: string
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        range:
          type: string
        rateOfFire:
          type: string
        size:
          type: string
        slot:
          type: string
        slotLabel:
          type: string
        storage:
          type: string
        temperatureRating:
          type: string
        type:
          type: string
        typeLabel:
          type: string
        volume:
          type: string
        weaponClass:
          type: string
        weaponClassLabel:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageIsFallback:
          type: boolean
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - availability
      - media
      - createdAt
      - updatedAt
      title: Equipment
    FieldError:
      type: object
      properties:
        attribute:
          type: string
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/StandardError"
      additionalProperties: false
      required:
      - attribute
      - messages
      title: FieldError
    FilterOption:
      type: object
      properties:
        category:
          type: string
        icon:
          type: string
        label:
          type: string
        value:
          type: string
        name:
          type: string
          deprecated: true
      additionalProperties: false
      required:
      - label
      - value
      title: FilterOption
    FuelTank:
      type: object
      properties:
        capacity:
          type: number
      additionalProperties: false
      required:
      - capacity
      title: FuelTank
    Gallery:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        name:
          type: string
        slug:
          type: string
      additionalProperties: false
      required:
      - id
      - type
      - name
      - slug
      title: Gallery
    Habitation:
      type: object
      properties:
        name:
          type: string
        habitationName:
          type: string
        type:
          "$ref": "#/components/schemas/HabitationTypeEnum"
        typeLabel:
          type: string
      additionalProperties: false
      required:
      - name
      - type
      - typeLabel
      title: Habitation
    HabitationCount:
      type: object
      properties:
        count:
          type: integer
        type:
          type: string
        typeLabel:
          type: string
      additionalProperties: false
      required:
      - count
      - type
      - typeLabel
      title: HabitationCount
    Hardpoint:
      type: object
      properties:
        id:
          type: string
          format: uuid
        group:
          "$ref": "#/components/schemas/HardpointGroupEnum"
        groupKey:
          type: string
        matrixKey:
          type: string
        category:
          "$ref": "#/components/schemas/HardpointCategoryEnum"
        name:
          type: string
        minSize:
          type: integer
        maxSize:
          type: integer
        source:
          "$ref": "#/components/schemas/HardpointSourceEnum"
        types:
          type: array
          items:
            type: string
        details:
          type: string
        component:
          "$ref": "#/components/schemas/Component"
        hardpoints:
          type: array
          items:
            "$ref": "#/components/schemas/Hardpoint"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - id
      - name
      - createdAt
      - updatedAt
      title: Hardpoint
    CheckInput:
      type: object
      properties:
        value:
          type: string
      additionalProperties: false
      title: CheckInput
    Manufacturer:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        code:
          type: string
        logo:
          type: string
        longName:
          type: string
        scRef:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
      additionalProperties: false
      required:
      - name
      - slug
      - createdAt
      - updatedAt
      - id
      title: Manufacturer
    MediaImage:
      type: object
      properties:
        large:
          type: string
          format: uri
        medium:
          type: string
          format: uri
        small:
          type: string
          format: uri
        source:
          type: string
          format: uri
      additionalProperties: false
      required:
      - source
      - small
      - medium
      - large
      title: MediaImage
    Meta:
      type: object
      properties:
        pagination:
          "$ref": "#/components/schemas/Pagination"
      additionalProperties: false
      title: Meta
    Pagination:
      type: object
      properties:
        totalCount:
          type: integer
        currentPage:
          type: integer
        totalPages:
          type: integer
        defaultPerPage:
          type: integer
        maxPerPage:
          type: integer
        perPageSteps:
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
      additionalProperties: false
      required:
      - currentPage
      - totalPages
      title: Pagination
    PieChartStats:
      type: object
      properties:
        name:
          type: string
        "y":
          type: integer
        selected:
          type: boolean
        sliced:
          type: boolean
      additionalProperties: false
      required:
      - name
      - "y"
      - selected
      - sliced
      title: PieChartStats
    ScDataVersion:
      type: object
      properties:
        version:
          type: string
      additionalProperties: false
      required:
      - version
      title: ScDataVersion
    Session:
      type: object
      properties:
        pagination:
          "$ref": "#/components/schemas/Pagination"
      additionalProperties: false
      title: Session
    Shop:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        buying:
          type: boolean
        location:
          type: string
        locationLabel:
          type: string
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        refineryTerminal:
          type: boolean
        rental:
          type: boolean
        selling:
          type: boolean
        station:
          "$ref": "#/components/schemas/StationShop"
        stationLabel:
          type: string
        type:
          "$ref": "#/components/schemas/ShopTypeEnum"
        typeLabel:
          type: string
        celestialObject:
          "$ref": "#/components/schemas/CelestialObject"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - type
      - typeLabel
      - stationLabel
      - locationLabel
      - rental
      - buying
      - selling
      - media
      - refineryTerminal
      - station
      - createdAt
      - updatedAt
      title: Shop
    CelestialObjectSortEnum:
      type: string
      enum:
      - name asc
      - name desc
      - parent_id asc
      - parent_id desc
      - designation asc
      - designation desc
      title: CelestialObjectSortEnum
    FleetMembershipSortEnum:
      type: string
      enum:
      - user_rsi_handle asc
      - user_rsi_handle desc
      - user_username asc
      - user_username desc
      - created_at asc
      - created_at desc
      - accepted_at asc
      - accepted_at desc
      title: FleetMembershipSortEnum
    FleetVehicleSortEnum:
      type: string
      enum:
      - model_name asc
      - model_name desc
      - created_at asc
      - created_at desc
      - updated_at asc
      - updated_at desc
      title: FleetVehicleSortEnum
    ModelPaintSortEnum:
      type: string
      enum:
      - name asc
      - name desc
      - created_at asc
      - created_at desc
      - updated_at asc
      - updated_at desc
      - model_slug asc
      - model_slug desc
      title: ModelPaintSortEnum
    ModelSortEnum:
      type: string
      enum:
      - name asc
      - name desc
      - created_at asc
      - created_at desc
      - length asc
      - length desc
      - beam asc
      - beam desc
      - height asc
      - height desc
      - mass asc
      - mass desc
      - cargo asc
      - cargo desc
      - manufacturer_name asc
      - manufacturer_name desc
      - pledge_price asc
      - pledge_price desc
      - price asc
      - price desc
      - scm_speed asc
      - scm_speed desc
      - max_speed asc
      - max_speed desc
      - ground_max_speed asc
      - ground_max_speed desc
      - production_status asc
      - production_status desc
      - focus asc
      - focus desc
      title: ModelSortEnum
    RoadmapItemSortEnum:
      type: string
      enum:
      - name asc
      - name desc
      - rsi_category_id asc
      - rsi_category_id desc
      title: RoadmapItemSortEnum
    StationSortEnum:
      type: string
      enum:
      - name asc
      - name desc
      - station_type asc
      - station_type desc
      title: StationSortEnum
    TradeRouteSortEnum:
      type: string
      enum:
      - average_profit_per_unit_percent asc
      - average_profit_per_unit_percent desc
      - profit_per_unit_percent asc
      - profit_per_unit_percent desc
      - average_profit_per_unit asc
      - average_profit_per_unit desc
      - profit_per_unit asc
      - profit_per_unit desc
      - origin_shop_station_name asc
      - origin_shop_station_name desc
      - created_at asc
      - created_at desc
      title: TradeRouteSortEnum
    UserSortEnum:
      type: string
      enum:
      - username asc
      - username desc
      - email asc
      - email desc
      - created_at asc
      - created_at desc
      - last_active_at asc
      - last_active_at desc
      - last_sign_in_at asc
      - last_sign_in_at desc
      title: UserSortEnum
    VehicleSortEnum:
      type: string
      enum:
      - flagship desc
      - flagship asc
      - name asc
      - name desc
      - model_name asc
      - model_name desc
      - created_at asc
      - created_at desc
      - updated_at asc
      - updated_at desc
      - model_manufacturer_name asc
      - model_manufacturer_name desc
      - model_length asc
      - model_length desc
      - model_beam asc
      - model_beam desc
      - model_height asc
      - model_height desc
      - model_mass asc
      - model_mass desc
      - model_cargo asc
      - model_cargo desc
      - model_pledge_price asc
      - model_pledge_price desc
      - model_price asc
      - model_price desc
      - model_scm_speed asc
      - model_scm_speed desc
      - model_max_speed asc
      - model_max_speed desc
      - model_ground_max_speed asc
      - model_ground_max_speed desc
      - model_production_status asc
      - model_production_status desc
      - model_focus asc
      - model_focus desc
      title: VehicleSortEnum
    StandardError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      additionalProperties: false
      required:
      - code
      - message
      title: StandardError
    StandardMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      additionalProperties: false
      required:
      - code
      - message
      title: StandardMessage
    StationShop:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
      additionalProperties: false
      required:
      - name
      - slug
      title: StationShop
    ValidationError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/FieldError"
      additionalProperties: false
      required:
      - code
      - message
      title: ValidationError
    Version:
      type: object
      properties:
        version:
          type: string
        codename:
          type: string
      additionalProperties: false
      required:
      - version
      - codename
      title: Version
    ViewImage:
      type: object
      properties:
        source:
          type: string
          format: uri
        small:
          type: string
          format: uri
        medium:
          type: string
          format: uri
        large:
          type: string
          format: uri
        xlarge:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
      additionalProperties: false
      required:
      - source
      - small
      - medium
      - large
      - xlarge
      - width
      - height
      title: ViewImage
    AdminUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        twoFactorRequired:
          type: boolean
        twoFactorQrCodeUrl:
          type: string
        twoFactorProvisioningUrl:
          type: string
        resourceAccess:
          type: array
          items:
            type: string
        superAdmin:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - username
      - email
      - twoFactorRequired
      - superAdmin
      - resourceAccess
      - createdAt
      - updatedAt
      title: AdminUser
    CelestialObject:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        designation:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        habitable:
          type: boolean
          nullable: true
        fairchanceact:
          type: boolean
          nullable: true
        subType:
          type: string
          nullable: true
        size:
          type: string
          nullable: true
        danger:
          type: integer
          nullable: true
        economy:
          type: integer
          nullable: true
        population:
          type: integer
          nullable: true
        locationLabel:
          type: string
          nullable: true
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        starsystem:
          "$ref": "#/components/schemas/Starsystem"
        parent:
          "$ref": "#/components/schemas/CelestialObject"
        moons:
          type: array
          items:
            "$ref": "#/components/schemas/CelestialObject"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: url
          deprecated: true
        storeImageLarge:
          type: string
          deprecated: true
        storeImageMedium:
          type: string
          deprecated: true
        storeImageSmall:
          type: string
          deprecated: true
        id:
          type: string
          format: uuid
      additionalProperties: false
      required:
      - name
      - slug
      - designation
      - starsystem
      - media
      - createdAt
      - updatedAt
      title: CelestialObject
    HangarGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        color:
          type: string
        public:
          type: boolean
        sort:
          type: integer
        vehiclesCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - color
      - public
      - createdAt
      - updatedAt
      title: HangarGroup
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        background:
          type: boolean
        bigUrl:
          type: string
          format: uri
        caption:
          type: string
        name:
          type: string
        smallUrl:
          type: string
          format: uri
        type:
          type: string
        url:
          type: string
          format: uri
        width:
          type: number
        height:
          type: number
        gallery:
          "$ref": "#/components/schemas/Gallery"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        size:
          type: number
        enabled:
          type: boolean
        global:
          type: boolean
      additionalProperties: false
      required:
      - id
      - name
      - url
      - type
      - background
      - smallUrl
      - bigUrl
      - createdAt
      - updatedAt
      - enabled
      - global
      title: Image
    Images:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Image"
      additionalProperties: false
      required:
      - items
      - meta
      title: Images
    Import:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          "$ref": "#/components/schemas/ImportTypeEnum"
        status:
          "$ref": "#/components/schemas/ImportStatusEnum"
        info:
          type: string
        version:
          type: string
        input:
          type: string
        output:
          type: string
        import:
          type: string
        importData:
          type: string
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        failedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - type
      - status
      - createdAt
      - updatedAt
      title: Import
    Imports:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Import"
      additionalProperties: false
      required:
      - items
      - meta
      title: Imports
    ImageInput:
      type: object
      properties:
        caption:
          type: string
        enabled:
          type: boolean
        global:
          type: boolean
        background:
          type: boolean
        galleryId:
          type: string
          format: uuid
        galleryType:
          "$ref": "#/components/schemas/GalleryTypeEnum"
      additionalProperties: false
      title: ImageInput
    ImageInputCreate:
      type: object
      properties:
        caption:
          type: string
        enabled:
          type: boolean
        global:
          type: boolean
        background:
          type: boolean
        galleryId:
          type: string
          format: uuid
        galleryType:
          "$ref": "#/components/schemas/GalleryTypeEnum"
        file:
          type: string
      additionalProperties: false
      title: ImageInputCreate
    ItemPriceInput:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        itemType:
          "$ref": "#/components/schemas/ItemPriceItemTypeEnum"
        price:
          type: number
        priceType:
          "$ref": "#/components/schemas/ItemPriceTypeEnum"
        location:
          type: string
        locationUrl:
          type: string
          format: uri
      additionalProperties: false
      title: ItemPriceInput
    ModelCreateInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hidden:
          type: boolean
        active:
          type: boolean
        ground:
          type: boolean
        mass:
          type: number
        minCrew:
          type: integer
        maxCrew:
          type: integer
        scmSpeed:
          type: number
        scmSpeedBoosted:
          type: number
        maxSpeed:
          type: number
        reverseSpeedBoosted:
          type: number
        yaw:
          type: number
        yawBoosted:
          type: number
        pitch:
          type: number
        pitchBoosted:
          type: number
        roll:
          type: number
        rollBoosted:
          type: number
        scIdentifier:
          type: string
        erkulIdentifier:
          type: string
        manufacturerId:
          type: string
          format: uuid
        rsiId:
          type: integer
        baseModelId:
          type: string
          format: uuid
        productionStatus:
          type: string
        productionNote:
          type: string
        classification:
          type: string
        focus:
          type: string
        size:
          type: string
        dockSize:
          type: string
        length:
          type: number
        beam:
          type: number
        height:
          type: number
        onSale:
          type: boolean
        storeUrl:
          type: string
        salesPageUrl:
          type: string
        price:
          type: number
        pledgePrice:
          type: number
        lastPledgePrice:
          type: number
        cargo:
          type: number
        cargoHolds:
          type: string
        hydrogenFuelTankSize:
          type: number
        hydrogenFuelTanks:
          type: string
        quantumFuelTankSize:
          type: number
        quantumFuelTanks:
          type: string
        storeImageNew:
          type: string
      additionalProperties: false
      title: ModelCreateInput
    ModelUpdateInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hidden:
          type: boolean
        active:
          type: boolean
        ground:
          type: boolean
        mass:
          type: number
        minCrew:
          type: integer
        maxCrew:
          type: integer
        scmSpeed:
          type: number
        scmSpeedBoosted:
          type: number
        maxSpeed:
          type: number
        reverseSpeedBoosted:
          type: number
        yaw:
          type: number
        yawBoosted:
          type: number
        pitch:
          type: number
        pitchBoosted:
          type: number
        roll:
          type: number
        rollBoosted:
          type: number
        scIdentifier:
          type: string
        erkulIdentifier:
          type: string
        manufacturerId:
          type: string
          format: uuid
        rsiId:
          type: integer
        baseModelId:
          type: string
          format: uuid
        productionStatus:
          type: string
        productionNote:
          type: string
        classification:
          type: string
        focus:
          type: string
        size:
          type: string
        dockSize:
          type: string
        length:
          type: number
        beam:
          type: number
        height:
          type: number
        onSale:
          type: boolean
        storeUrl:
          type: string
        salesPageUrl:
          type: string
        price:
          type: number
        pledgePrice:
          type: number
        lastPledgePrice:
          type: number
        cargo:
          type: number
        cargoHolds:
          type: string
        hydrogenFuelTankSize:
          type: number
        hydrogenFuelTanks:
          type: string
        quantumFuelTankSize:
          type: number
        quantumFuelTanks:
          type: string
        storeImageNew:
          type: string
      additionalProperties: false
      title: ModelUpdateInput
    SessionInput:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        rememberMe:
          type: boolean
        twoFactorCode:
          type: string
      additionalProperties: false
      title: SessionInput
    ItemPrice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        price:
          type: number
        timeRange:
          "$ref": "#/components/schemas/ItemPriceTimeRangeEnum"
        priceType:
          "$ref": "#/components/schemas/ItemPriceTypeEnum"
        itemId:
          type: string
          format: uuid
        itemType:
          "$ref": "#/components/schemas/ItemPriceItemTypeEnum"
        location:
          type: string
        locationUrl:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - id
      - price
      - priceType
      - itemId
      - itemType
      - location
      - createdAt
      - updatedAt
      title: ItemPrice
    ItemPrices:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ItemPrice"
      additionalProperties: false
      required:
      - items
      - meta
      title: ItemPrices
    Manufacturers:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Manufacturer"
      additionalProperties: false
      required:
      - items
      - meta
      title: Manufacturers
    ModelLoaner:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
      additionalProperties: false
      required:
      - name
      - slug
      title: ModelLoaner
    Model:
      type: object
      properties:
        id:
          type: string
          format: uuid
        scIdentifier:
          type: string
        name:
          type: string
        slug:
          type: string
        availability:
          type: object
          properties:
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            rentalAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
          additionalProperties: false
          required:
          - boughtAt
          - soldAt
          - rentalAt
        brochure:
          type: string
        classification:
          type: string
        classificationLabel:
          type: string
        crew:
          type: object
          properties:
            max:
              type: integer
            maxLabel:
              type: string
            min:
              type: integer
            minLabel:
              type: string
          additionalProperties: false
        description:
          type: string
        erkulIdentifier:
          type: string
        focus:
          type: string
        hasImages:
          type: boolean
        hasModules:
          type: boolean
        hasPaints:
          type: boolean
        hasUpgrades:
          type: boolean
        hasVideos:
          type: boolean
        holo:
          type: string
        lastPledgePrice:
          type: number
        lastPledgePriceLabel:
          type: string
        lastUpdatedAt:
          type: string
          format: date-time
        lastUpdatedAtLabel:
          type: string
        links:
          type: object
          properties:
            salesPageUrl:
              type: string
            storeUrl:
              type: string
          additionalProperties: false
        loaners:
          type: array
          items:
            "$ref": "#/components/schemas/ModelLoaner"
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
        media:
          type: object
          properties:
            angledView:
              "$ref": "#/components/schemas/ViewImage"
            angledViewColored:
              "$ref": "#/components/schemas/ViewImage"
            fleetchartImage:
              type: string
            frontView:
              "$ref": "#/components/schemas/ViewImage"
            frontViewColored:
              "$ref": "#/components/schemas/ViewImage"
            sideView:
              "$ref": "#/components/schemas/ViewImage"
            sideViewColored:
              "$ref": "#/components/schemas/ViewImage"
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
            topView:
              "$ref": "#/components/schemas/ViewImage"
            topViewColored:
              "$ref": "#/components/schemas/ViewImage"
            rsiStoreImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        metrics:
          type: object
          properties:
            beam:
              type: number
            beamLabel:
              type: string
            cargo:
              type: number
            cargoLabel:
              type: string
            fleetchartLength:
              type: number
            height:
              type: number
            heightLabel:
              type: string
            hydrogenFuelTankSize:
              type: number
            isGroundVehicle:
              type: boolean
            length:
              type: number
            lengthLabel:
              type: string
            mass:
              type: number
            massLabel:
              type: string
            quantumFuelTankSize:
              type: number
            size:
              type: string
            sizeLabel:
              type: string
            dockSize:
              type: string
          additionalProperties: false
        cargoHolds:
          type: array
          items:
            "$ref": "#/components/schemas/CargoHold"
        hydrogenFuelTanks:
          type: array
          items:
            "$ref": "#/components/schemas/FuelTank"
        quantumFuelTanks:
          type: array
          items:
            "$ref": "#/components/schemas/FuelTank"
        onSale:
          type: boolean
        pledgePrice:
          type: number
        pledgePriceLabel:
          type: string
        price:
          type: number
        priceLabel:
          type: string
        productionNote:
          type: string
        productionStatus:
          "$ref": "#/components/schemas/ModelProductionStatusEnum"
        rsiId:
          type: integer
        rsiName:
          type: string
        rsiSlug:
          type: string
        speeds:
          type: object
          properties:
            groundAcceleration:
              type: number
            groundDecceleration:
              type: number
            groundMaxSpeed:
              type: number
            groundReverseSpeed:
              type: number
            maxSpeed:
              type: number
            pitch:
              type: number
            pitchBoosted:
              type: number
            roll:
              type: number
            rollBoosted:
              type: number
            scmSpeed:
              type: number
            scmSpeedBoosted:
              type: number
            reverseSpeedBoosted:
              type: number
            yaw:
              type: number
            yawBoosted:
              type: number
          additionalProperties: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hidden:
          type: boolean
        active:
          type: boolean
        scLength:
          type: number
        scBeam:
          type: number
        scHeight:
          type: number
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - availability
      - crew
      - hasImages
      - hasModules
      - hasPaints
      - hasUpgrades
      - hasVideos
      - links
      - loaners
      - media
      - metrics
      - onSale
      - speeds
      - createdAt
      - updatedAt
      - hidden
      - active
      title: Model
    ModelExtended:
      type: object
      properties:
        id:
          type: string
          format: uuid
        scIdentifier:
          type: string
        name:
          type: string
        slug:
          type: string
        availability:
          type: object
          properties:
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            rentalAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
          additionalProperties: false
          required:
          - boughtAt
          - soldAt
          - rentalAt
        brochure:
          type: string
        classification:
          type: string
        classificationLabel:
          type: string
        crew:
          type: object
          properties:
            max:
              type: integer
            maxLabel:
              type: string
            min:
              type: integer
            minLabel:
              type: string
          additionalProperties: false
        description:
          type: string
        erkulIdentifier:
          type: string
        focus:
          type: string
        hasImages:
          type: boolean
        hasModules:
          type: boolean
        hasPaints:
          type: boolean
        hasUpgrades:
          type: boolean
        hasVideos:
          type: boolean
        holo:
          type: string
        lastPledgePrice:
          type: number
        lastPledgePriceLabel:
          type: string
        lastUpdatedAt:
          type: string
          format: date-time
        lastUpdatedAtLabel:
          type: string
        links:
          type: object
          properties:
            salesPageUrl:
              type: string
            storeUrl:
              type: string
            self:
              type: string
              format: uri
            frontend:
              type: string
              format: uri
          additionalProperties: false
        loaners:
          type: array
          items:
            "$ref": "#/components/schemas/ModelLoaner"
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
        media:
          type: object
          properties:
            angledView:
              "$ref": "#/components/schemas/ViewImage"
            angledViewColored:
              "$ref": "#/components/schemas/ViewImage"
            fleetchartImage:
              type: string
            frontView:
              "$ref": "#/components/schemas/ViewImage"
            frontViewColored:
              "$ref": "#/components/schemas/ViewImage"
            sideView:
              "$ref": "#/components/schemas/ViewImage"
            sideViewColored:
              "$ref": "#/components/schemas/ViewImage"
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
            topView:
              "$ref": "#/components/schemas/ViewImage"
            topViewColored:
              "$ref": "#/components/schemas/ViewImage"
            rsiStoreImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        metrics:
          type: object
          properties:
            beam:
              type: number
            beamLabel:
              type: string
            cargo:
              type: number
            cargoLabel:
              type: string
            fleetchartLength:
              type: number
            height:
              type: number
            heightLabel:
              type: string
            hydrogenFuelTankSize:
              type: number
            isGroundVehicle:
              type: boolean
            length:
              type: number
            lengthLabel:
              type: string
            mass:
              type: number
            massLabel:
              type: string
            quantumFuelTankSize:
              type: number
            size:
              type: string
            sizeLabel:
              type: string
            dockSize:
              type: string
          additionalProperties: false
        cargoHolds:
          type: array
          items:
            "$ref": "#/components/schemas/CargoHold"
        hydrogenFuelTanks:
          type: array
          items:
            "$ref": "#/components/schemas/FuelTank"
        quantumFuelTanks:
          type: array
          items:
            "$ref": "#/components/schemas/FuelTank"
        onSale:
          type: boolean
        pledgePrice:
          type: number
        pledgePriceLabel:
          type: string
        price:
          type: number
        priceLabel:
          type: string
        productionNote:
          type: string
        productionStatus:
          "$ref": "#/components/schemas/ModelProductionStatusEnum"
        rsiId:
          type: integer
        rsiName:
          type: string
        rsiSlug:
          type: string
        speeds:
          type: object
          properties:
            groundAcceleration:
              type: number
            groundDecceleration:
              type: number
            groundMaxSpeed:
              type: number
            groundReverseSpeed:
              type: number
            maxSpeed:
              type: number
            pitch:
              type: number
            pitchBoosted:
              type: number
            roll:
              type: number
            rollBoosted:
              type: number
            scmSpeed:
              type: number
            scmSpeedBoosted:
              type: number
            reverseSpeedBoosted:
              type: number
            yaw:
              type: number
            yawBoosted:
              type: number
          additionalProperties: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hidden:
          type: boolean
        active:
          type: boolean
        scLength:
          type: number
        scBeam:
          type: number
        scHeight:
          type: number
        baseModelId:
          type: string
          format: uuid
        dockCounts:
          type: array
          items:
            "$ref": "#/components/schemas/DockCount"
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - availability
      - crew
      - hasImages
      - hasModules
      - hasPaints
      - hasUpgrades
      - hasVideos
      - links
      - loaners
      - media
      - metrics
      - onSale
      - speeds
      - createdAt
      - updatedAt
      - hidden
      - active
      - dockCounts
      title: ModelExtended
    Models:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Model"
      additionalProperties: false
      required:
      - items
      - meta
      title: Models
    ModelModulePackage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        pledgePrice:
          type: number
        modules:
          type: array
          items:
            "$ref": "#/components/schemas/ModelModule"
        model:
          "$ref": "#/components/schemas/Model"
        media:
          type: object
          properties:
            angledView:
              "$ref": "#/components/schemas/ViewImage"
            sideView:
              "$ref": "#/components/schemas/ViewImage"
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
            topView:
              "$ref": "#/components/schemas/ViewImage"
          additionalProperties: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hasStoreImage:
          type: boolean
          deprecated: true
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        angledView:
          type: string
          deprecated: true
        angledViewHeight:
          type: number
          deprecated: true
        angledViewLarge:
          type: string
          deprecated: true
        angledViewMedium:
          type: string
          deprecated: true
        angledViewSmall:
          type: string
          deprecated: true
        angledViewWidth:
          type: number
          deprecated: true
        angledViewXlarge:
          type: string
          deprecated: true
        sideView:
          type: string
          deprecated: true
        sideViewHeight:
          type: number
          deprecated: true
        sideViewLarge:
          type: string
          deprecated: true
        sideViewMedium:
          type: string
          deprecated: true
        sideViewSmall:
          type: string
          deprecated: true
        sideViewWidth:
          type: number
          deprecated: true
        sideViewXlarge:
          type: string
          deprecated: true
        topView:
          type: string
          deprecated: true
        topViewHeight:
          type: number
          deprecated: true
        topViewLarge:
          type: string
          deprecated: true
        topViewMedium:
          type: string
          deprecated: true
        topViewSmall:
          type: string
          deprecated: true
        topViewWidth:
          type: number
          deprecated: true
        topViewXlarge:
          type: string
          deprecated: true
      additionalProperties: false
      required:
      - id
      - name
      - modules
      - model
      - media
      - createdAt
      - updatedAt
      title: ModelModulePackage
    ModelModule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        scKey:
          type: string
        metrics:
          type: object
          properties:
            cargo:
              type: number
          additionalProperties: false
        cargoHolds:
          type: array
          items:
            "$ref": "#/components/schemas/CargoHold"
        availability:
          type: object
          properties:
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
          additionalProperties: false
          required:
          - boughtAt
          - soldAt
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        pledgePrice:
          type: number
        productionStatus:
          type: string
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
        hardpoints:
          type: array
          items:
            "$ref": "#/components/schemas/Hardpoint"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        model:
          "$ref": "#/components/schemas/Model"
      additionalProperties: false
      required:
      - id
      - name
      - availability
      - media
      - createdAt
      - updatedAt
      - model
      title: ModelModule
    ModelPaint:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        lastUpdatedAt:
          type: string
          format: date-time
        lastUpdatedAtLabel:
          type: string
        availability:
          type: object
          properties:
            boughtAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
            soldAt:
              type: array
              items:
                "$ref": "#/components/schemas/ItemPrice"
          additionalProperties: false
          required:
          - boughtAt
          - soldAt
        media:
          type: object
          properties:
            angledView:
              "$ref": "#/components/schemas/ViewImage"
            fleetchartImage:
              type: string
            sideView:
              "$ref": "#/components/schemas/ViewImage"
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
            topView:
              "$ref": "#/components/schemas/ViewImage"
            angledViewColored:
              "$ref": "#/components/schemas/ViewImage"
            frontView:
              "$ref": "#/components/schemas/ViewImage"
            frontViewColored:
              "$ref": "#/components/schemas/ViewImage"
            sideViewColored:
              "$ref": "#/components/schemas/ViewImage"
            rsiStoreImage:
              "$ref": "#/components/schemas/MediaImage"
            topViewColored:
              "$ref": "#/components/schemas/ViewImage"
          additionalProperties: false
        nameWithModel:
          type: string
        rsiId:
          type: integer
        rsiName:
          type: string
        rsiSlug:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        angledView:
          type: string
          format: uri
          deprecated: true
        angledViewHeight:
          type: number
          deprecated: true
        angledViewLarge:
          type: string
          format: uri
          deprecated: true
        angledViewMedium:
          type: string
          format: uri
          deprecated: true
        angledViewSmall:
          type: string
          format: uri
          deprecated: true
        angledViewWidth:
          type: number
          deprecated: true
        angledViewXlarge:
          type: string
          format: uri
          deprecated: true
        fleetchartImage:
          type: string
          format: uri
          deprecated: true
        hasStoreImage:
          type: boolean
        sideView:
          type: string
          format: uri
          deprecated: true
        sideViewHeight:
          type: number
          deprecated: true
        sideViewLarge:
          type: string
          format: uri
          deprecated: true
        sideViewMedium:
          type: string
          format: uri
          deprecated: true
        sideViewSmall:
          type: string
          format: uri
          deprecated: true
        sideViewWidth:
          type: number
          deprecated: true
        sideViewXlarge:
          type: string
          format: uri
          deprecated: true
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        topView:
          type: string
          format: uri
          deprecated: true
        topViewHeight:
          type: number
          deprecated: true
        topViewLarge:
          type: string
          format: uri
          deprecated: true
        topViewMedium:
          type: string
          format: uri
          deprecated: true
        topViewSmall:
          type: string
          format: uri
          deprecated: true
        topViewWidth:
          type: number
          deprecated: true
        topViewXlarge:
          type: string
          format: uri
          deprecated: true
        hidden:
          type: boolean
        active:
          type: boolean
        model:
          "$ref": "#/components/schemas/Model"
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - availability
      - media
      - createdAt
      - updatedAt
      - hidden
      - active
      - model
      title: ModelPaint
    ModelPaints:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ModelPaint"
      additionalProperties: false
      required:
      - items
      - meta
      title: ModelPaints
    ModelUpgrade:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        pledgePrice:
          type: number
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        model:
          "$ref": "#/components/schemas/Model"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
      additionalProperties: false
      required:
      - id
      - name
      - media
      - model
      - createdAt
      - updatedAt
      title: ModelUpgrade
    ComponentQuery:
      type: object
      properties:
        nameCont:
          type: string
        idIn:
          type: array
          items:
            type: string
            format: uuid
        nameIn:
          type: array
          items:
            type: string
        itemTypeIn:
          type: array
          items:
            type: string
        componentClassIn:
          type: array
          items:
            type: string
      additionalProperties: false
      title: ComponentQuery
    ImageQuery:
      type: object
      properties:
        galleryIdEq:
          type: string
          format: uuid
        galleryTypeEq:
          type: string
      additionalProperties: false
      title: ImageQuery
    ImportQuery:
      type: object
      properties:
        typeEq:
          "$ref": "#/components/schemas/ImportTypeEnum"
        typeIn:
          type: array
          items:
            "$ref": "#/components/schemas/ImportTypeEnum"
      additionalProperties: false
      title: ImportQuery
    ItemPriceQuery:
      type: object
      properties:
        locationCont:
          type: string
        itemIdEq:
          type: string
          format: uuid
        itemIdIn:
          type: array
          items:
            type: string
            format: uuid
        itemTypeEq:
          "$ref": "#/components/schemas/ItemPriceItemTypeEnum"
        itemTypeIn:
          type: array
          items:
            "$ref": "#/components/schemas/ItemPriceItemTypeEnum"
        priceTypeEq:
          "$ref": "#/components/schemas/ItemPriceTypeEnum"
        priceTypeIn:
          type: array
          items:
            "$ref": "#/components/schemas/ItemPriceTypeEnum"
      additionalProperties: false
      title: ItemPriceQuery
    ManufacturerQuery:
      type: object
      properties:
        withModels:
          type: boolean
        logoBlank:
          type: boolean
        nameEq:
          type: string
        nameCont:
          type: string
        nameIn:
          type: array
          items:
            type: string
        slugEq:
          type: string
        slugCont:
          type: string
        slugIn:
          type: array
          items:
            type: string
      additionalProperties: false
      title: ManufacturerQuery
    ModelPaintQuery:
      type: object
      properties:
        nameEq:
          type: string
        nameCont:
          type: string
        idEq:
          type: string
        nameIn:
          type: array
          items:
            type: string
        idIn:
          type: array
          items:
            type: string
        idNotIn:
          type: array
          items:
            type: string
        modelSlugIn:
          type: array
          items:
            type: string
        modelSlugEq:
          type: string
        sorts:
          anyOf:
          - type: array
            items:
              "$ref": "#/components/schemas/ModelPaintSortEnum"
          - "$ref": "#/components/schemas/ModelPaintSortEnum"
      additionalProperties: false
      title: ModelPaintQuery
    ModelQuery:
      type: object
      properties:
        nameCont:
          type: string
        idEq:
          type: string
        nameIn:
          type: array
          items:
            type: string
        idIn:
          type: array
          items:
            type: string
        idNotIn:
          type: array
          items:
            type: string
        manufacturerIn:
          type: array
          items:
            type: string
        productionStatusIn:
          type: array
          items:
            type: string
        searchCont:
          type: string
        scIdentifierBlank:
          type: boolean
        fleetchartImageBlank:
          type: boolean
        holoBlank:
          type: boolean
        topViewColoredBlank:
          type: boolean
        frontViewBlank:
          type: boolean
        sorts:
          anyOf:
          - type: array
            items:
              "$ref": "#/components/schemas/ModelSortEnum"
          - "$ref": "#/components/schemas/ModelSortEnum"
      additionalProperties: false
      title: ModelQuery
    UserQuery:
      type: object
      properties:
        searchCont:
          type: string
        usernameCont:
          type: string
        usernameEq:
          type: string
        emailCont:
          type: string
        rsiHandleCont:
          type: string
        idIn:
          type: array
          items:
            type: string
            format: uuid
        usernameIn:
          type: array
          items:
            type: string
        emailIn:
          type: array
          items:
            type: string
        rsihandleIn:
          type: array
          items:
            type: string
        sorts:
          anyOf:
          - type: array
            items:
              "$ref": "#/components/schemas/UserSortEnum"
          - "$ref": "#/components/schemas/UserSortEnum"
      additionalProperties: false
      title: UserQuery
    VehicleQuery:
      type: object
      properties:
        searchCont:
          type: string
        idEq:
          type: string
        idIn:
          type: array
          items:
            type: string
        idNotIn:
          type: array
          items:
            type: string
        nameCont:
          type: string
        nameIn:
          type: array
          items:
            type: string
        userUsernameIn:
          type: array
          items:
            type: string
        modelSlugIn:
          type: array
          items:
            type: string
        manufacturerIn:
          type: array
          items:
            type: string
        modelIdEq:
          type: string
        modelIdIn:
          type: array
          items:
            type: string
        modelIdNotIn:
          type: array
          items:
            type: string
        modelNameCont:
          type: string
        modelNameIn:
          type: array
          items:
            type: string
        modelProductionStatusIn:
          type: array
          items:
            type: string
        modelSearchCont:
          type: string
        loanerEq:
          type: boolean
        wantedEq:
          type: boolean
        sorts:
          anyOf:
          - type: array
            items:
              "$ref": "#/components/schemas/VehicleSortEnum"
          - "$ref": "#/components/schemas/VehicleSortEnum"
      additionalProperties: false
      title: VehicleQuery
    ShopCommodities:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ShopCommodity"
      additionalProperties: false
      required:
      - items
      - meta
      title: ShopCommodities
    ShopCommodity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        category:
          "$ref": "#/components/schemas/ShopCommodityCategoryEnum"
        subCategory:
          anyOf:
          - type: string
          - "$ref": "#/components/schemas/ComponentClassEnum"
          - "$ref": "#/components/schemas/EquipmentTypeEnum"
          - "$ref": "#/components/schemas/CommodityTypeEnum"
        subCategoryLabel:
          type: string
        prices:
          type: object
          properties:
            averageBuyPrice:
              type: number
            averageRentalPrice1Day:
              type: number
            averageRentalPrice30Days:
              type: number
            averageRentalPrice3Days:
              type: number
            averageRentalPrice7Days:
              type: number
            averageSellPrice:
              type: number
            buyPrice:
              type: number
            rentalPrice1Day:
              type: number
            rentalPrice30Days:
              type: number
            rentalPrice3Days:
              type: number
            rentalPrice7Days:
              type: number
            sellPrice:
              type: number
            pricePerUnit:
              type: boolean
          additionalProperties: false
          required:
          - pricePerUnit
        locationLabel:
          type: string
        confirmed:
          type: boolean
        commodityItemType:
          "$ref": "#/components/schemas/ShopCommodityItemTypeEnum"
        commodityItemId:
          type: string
          format: uuid
        shop:
          "$ref": "#/components/schemas/Shop"
        item:
          anyOf:
          - "$ref": "#/components/schemas/Model"
          - "$ref": "#/components/schemas/Component"
          - "$ref": "#/components/schemas/Commodity"
          - "$ref": "#/components/schemas/Equipment"
          - "$ref": "#/components/schemas/ModelModule"
          - "$ref": "#/components/schemas/ModelPaint"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        submitter:
          type: object
          properties:
            id:
              type: string
              format: uuid
            username:
              type: string
          required:
          - id
          - username
          additionalProperties: false
      additionalProperties: false
      required:
      - id
      - name
      - slug
      - prices
      - confirmed
      - commodityItemType
      - commodityItemId
      - shop
      - media
      - createdAt
      - updatedAt
      title: ShopCommodity
    Starsystem:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        danger:
          type: string
        description:
          type: string
        economy:
          type: string
        locationLabel:
          type: string
        mapX:
          type: string
        mapY:
          type: string
        population:
          type: string
        size:
          type: string
        status:
          type: string
        type:
          type: string
        media:
          type: object
          properties:
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        celestialObjects:
          type: array
          items:
            "$ref": "#/components/schemas/CelestialObject"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        id:
          type: string
          format: uuid
      additionalProperties: false
      required:
      - name
      - slug
      - media
      - createdAt
      - updatedAt
      - id
      title: Starsystem
    Station:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        cargoHub:
          type: boolean
        type:
          "$ref": "#/components/schemas/StationTypeEnum"
        typeLabel:
          type: string
        size:
          "$ref": "#/components/schemas/StationSizeEnum"
        sizeLabel:
          type: string
        classification:
          "$ref": "#/components/schemas/StationClassificationEnum"
        classificationLabel:
          type: string
        description:
          type: string
        dockCounts:
          type: array
          items:
            "$ref": "#/components/schemas/DockCount"
        habitable:
          type: boolean
        habitationCounts:
          type: array
          items:
            "$ref": "#/components/schemas/HabitationCount"
        hasImages:
          type: boolean
        locationLabel:
          type: string
        location:
          type: string
        media:
          type: object
          properties:
            backgroundImage:
              type: string
            storeImage:
              "$ref": "#/components/schemas/MediaImage"
          additionalProperties: false
        refinery:
          type: boolean
        shopListLabel:
          type: string
        celestialObject:
          "$ref": "#/components/schemas/CelestialObject"
        starsystem:
          "$ref": "#/components/schemas/Starsystem"
        shops:
          type: array
          items:
            "$ref": "#/components/schemas/Shop"
        docks:
          type: array
          items:
            "$ref": "#/components/schemas/Dock"
        habitations:
          type: array
          items:
            "$ref": "#/components/schemas/Habitation"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        backgroundImage:
          type: string
          format: uri
          deprecated: true
        storeImage:
          type: string
          format: uri
          deprecated: true
        storeImageLarge:
          type: string
          format: uri
          deprecated: true
        storeImageMedium:
          type: string
          format: uri
          deprecated: true
        storeImageSmall:
          type: string
          format: uri
          deprecated: true
        id:
          type: string
          format: uuid
      additionalProperties: false
      required:
      - name
      - slug
      - type
      - typeLabel
      - size
      - sizeLabel
      - classification
      - classificationLabel
      - habitable
      - hasImages
      - media
      - refinery
      - cargoHub
      - celestialObject
      - createdAt
      - updatedAt
      - id
      title: Station
    Stations:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Station"
      additionalProperties: false
      required:
      - items
      - meta
      title: Stations
    Stats:
      type: object
      properties:
        onlineCount:
          type: integer
        shipsCountYear:
          type: integer
        shipsCountTotal:
          type: integer
        usersCountTotal:
          type: integer
        fleetsCountTotal:
          type: integer
      additionalProperties: false
      required:
      - onlineCount
      - shipsCountYear
      - shipsCountTotal
      - usersCountTotal
      - fleetsCountTotal
      title: Stats
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        unconfirmedEmail:
          type: string
        avatar:
          type: string
        rsiHandle:
          type: string
        discord:
          type: string
        youtube:
          type: string
        twitch:
          type: string
        guilded:
          type: string
        homepage:
          type: string
        saleNotify:
          type: boolean
        publicHangar:
          type: boolean
        publicHangarUrl:
          type: string
        publicHangarLoaners:
          type: boolean
        publicWishlist:
          type: boolean
        publicWishlistUrl:
          type: string
        hideOwner:
          type: boolean
        twoFactorRequired:
          type: boolean
        twoFactorQrCodeUrl:
          type: string
        twoFactorProvisioningUrl:
          type: string
        hangarUpdatedAt:
          type: string
          format: date-time
        confirmedAt:
          type: string
          format: date-time
        lastActiveAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - username
      - email
      - saleNotify
      - publicHangar
      - publicHangarLoaners
      - publicWishlist
      - hideOwner
      - twoFactorRequired
      - createdAt
      - updatedAt
      title: User
    Users:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/User"
      additionalProperties: false
      required:
      - items
      - meta
      title: Users
    Vehicle:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        serial:
          type: string
        user:
          "$ref": "#/components/schemas/User"
        alternativeNames:
          type: array
          items:
            type: string
        boughtVia:
          "$ref": "#/components/schemas/BoughtViaEnum"
        boughtViaLabel:
          type: string
        flagship:
          type: boolean
        hangarGroupIds:
          type: array
          items:
            type: string
            format: uuid
        hangarGroups:
          type: array
          items:
            "$ref": "#/components/schemas/HangarGroup"
        loaner:
          type: boolean
        model:
          "$ref": "#/components/schemas/Model"
        modelModuleIds:
          type: array
          items:
            type: string
            format: uuid
        modelUpgradeIds:
          type: array
          items:
            type: string
            format: uuid
        modulePackage:
          "$ref": "#/components/schemas/ModelModulePackage"
        nameVisible:
          type: boolean
        paint:
          "$ref": "#/components/schemas/ModelPaint"
        public:
          type: boolean
        saleNotify:
          type: boolean
        upgrade:
          "$ref": "#/components/schemas/ModelUpgrade"
        wanted:
          type: boolean
        hidden:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
      - id
      - model
      - user
      - wanted
      - hidden
      - boughtVia
      - loaner
      - flagship
      - public
      - nameVisible
      - saleNotify
      - alternativeNames
      - modelUpgradeIds
      - hangarGroupIds
      - hangarGroups
      - modelModuleIds
      - createdAt
      - updatedAt
      title: Vehicle
    Vehicles:
      type: object
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Vehicle"
      additionalProperties: false
      required:
      - items
      - meta
      title: Vehicles
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    Oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://fleetyards.net/oauth/authorize
          tokenUrl: https://fleetyards.net/oauth/token
          scopes:
            public: Public Access
            profile:read: Read Profile
            profile:write: Manage Profile
            hangar: Full Hangar Access
            hangar:read: Read Hangar
            hangar:write: Manage Hangar
            fleet: Full Fleet Access
            fleet:read: Read Fleet
            fleet:write: Manage Fleet
    OpenId:
      type: openIdConnect
      openIdConnectUrl: https://fleetyards.net/.well-known/openid-configuration
    SessionCookie:
      type: apiKey
      description: Session Cookie
      name: FLTYRD
      in: cookie
