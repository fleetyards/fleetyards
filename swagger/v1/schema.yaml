---
openapi: 3.0.1
info:
  title: FleetYards.net API
  version: v1
  x-logo:
    url: http://fleetyards.test/docs/logo.png
    altText: FleetYards.net logo
servers:
- url: https://api.fleetyards.net/v1
  description: Production Server
- url: https://api.fleetyards.dev/v1
  description: Staging Server
- url: http://api.fleetyards.test/v1
  description: Dev Server
paths:
  "/celestial-objects":
    get:
      summary: Celestial Objects List
      description: Get a List of Celestial Objects
      tags:
      - CelestialObjects
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CelestialObject"
  "/celestial-objects/{slug}":
    get:
      summary: Celestial Object Detail
      parameters:
      - name: slug
        in: path
        description: slug
        schema:
          type: string
        required: true
      description: Get Detail of a Celestial Object referenced by its Slug
      tags:
      - CelestialObjects
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CelestialObject"
        '404':
          description: not_found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/commodities":
    get:
      summary: list commodities
      description: Get a List of Commodities
      tags:
      - Commodities
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Commodity"
  "/commodities/types":
    get:
      summary: commodity_types commodity
      description: Get a List of all Commodity Types
      tags:
      - Commodities
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FilterOption"
  "/commodity-prices":
    post:
      summary: create commodity_price
      description: Create new CommodityPrice
      tags:
      - Commodities
      responses:
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommodityPrice"
        '400':
          description: invalid data
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationError"
  "/commodity-prices/time-ranges":
    get:
      summary: time_ranges commodity_price
      description: Get a List of all Commodity Price TimeRanges
      tags:
      - Commodities
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FilterOption"
  "/components":
    get:
      summary: list components
      description: Get a List of Components
      tags:
      - Components
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Component"
  "/components/class_filters":
    get:
      summary: class_filters component
      description: Get a List of all Component Classes
      tags:
      - Components
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FilterOption"
  "/components/item_type_filters":
    get:
      summary: item_type_filters component
      description: Get a List of all Component Item Types
      tags:
      - Components
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FilterOption"
  "/equipment":
    get:
      summary: list equipment
      description: Get a List of Equipment
      tags:
      - Equipment
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Equipment"
  "/fleets/{slug}/invite-urls":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    get:
      summary: list fleet_invite_urls
      tags:
      - Fleets - Invite Urls
      responses:
        '200':
          description: successful
    post:
      summary: create fleet_invite_url
      tags:
      - Fleets - Invite Urls
      responses:
        '200':
          description: successful
  "/fleets/{slug}/invite-urls/{token}":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: token
      in: path
      description: token
      required: true
      schema:
        type: string
    delete:
      summary: delete fleet_invite_url
      tags:
      - Fleets - Invite Urls
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    get:
      summary: list fleet_members
      tags:
      - Fleets - Members
      responses:
        '200':
          description: successful
    put:
      summary: update fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
    patch:
      summary: update fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
    post:
      summary: create fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/member-quick-stats":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: quick_stats fleet_member
      tags:
      - Fleets - Members
      responses:
        '200':
          description: successful
  "/fleets/use-invite":
    post:
      summary: create_by_invite fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/current":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    get:
      summary: current fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/accept-invite":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    put:
      summary: accept_invite fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/decline-invite":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    put:
      summary: decline_invite fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/leave":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    delete:
      summary: leave fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/create-by-invite":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    post:
      summary: create_by_invite fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/{username}/demote":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    put:
      summary: demote fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/{username}/promote":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    put:
      summary: promote fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/{username}/accept-request":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    put:
      summary: accept_request fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/{username}/decline-request":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    put:
      summary: decline_request fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/members/{username}":
    parameters:
    - name: slug
      in: path
      description: Fleet slug
      required: true
      schema:
        type: string
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    delete:
      summary: delete fleet_membership
      tags:
      - Fleets - Memberships
      responses:
        '200':
          description: successful
  "/fleets/{slug}/stats/models-by-size":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: models_by_size fleet_stat
      tags:
      - Fleets - Stats
      responses:
        '200':
          description: successful
  "/fleets/{slug}/stats/models-by-production-status":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: models_by_production_status fleet_stat
      tags:
      - Fleets - Stats
      responses:
        '200':
          description: successful
  "/fleets/{slug}/stats/models-by-manufacturer":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: models_by_manufacturer fleet_stat
      tags:
      - Fleets - Stats
      responses:
        '200':
          description: successful
  "/fleets/{slug}/stats/models-by-classification":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: models_by_classification fleet_stat
      tags:
      - Fleets - Stats
      responses:
        '200':
          description: successful
  "/fleets/{slug}/vehicles":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: list fleet_vehicles
      tags:
      - Fleets - Vehicles
      responses:
        '200':
          description: successful
  "/fleets/{slug}/public-vehicles":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: public fleet_vehicle
      tags:
      - Fleets - Vehicles
      responses:
        '200':
          description: successful
  "/fleets/{slug}/fleetchart":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: fleetchart fleet_vehicle
      tags:
      - Fleets - Vehicles
      responses:
        '200':
          description: successful
  "/fleets/{slug}/public-fleetchart":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: public_fleetchart fleet_vehicle
      tags:
      - Fleets - Vehicles
      responses:
        '200':
          description: successful
  "/fleets/{slug}/quick-stats":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: quick_stats fleet_vehicle
      tags:
      - Fleets - Vehicles
      responses:
        '200':
          description: successful
  "/fleets":
    post:
      summary: create fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
  "/fleets/{slug}":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: show fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
    patch:
      summary: update fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
    put:
      summary: update fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
    delete:
      summary: delete fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
  "/fleets/check":
    post:
      summary: check fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
  "/fleets/invites":
    get:
      summary: invites fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
  "/fleets/current":
    get:
      summary: current fleet
      tags:
      - Fleets
      responses:
        '200':
          description: successful
  "/hangar-groups":
    get:
      summary: list hangar_groups
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
    post:
      summary: create hangar_group
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
  "/hangar-groups/{id}":
    parameters:
    - name: id
      in: path
      description: id
      schema:
        type: string
        format: uuid
      required: true
    patch:
      summary: update hangar_group
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
    put:
      summary: update hangar_group
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
    delete:
      summary: delete hangar_group
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
  "/hangar-groups/sort":
    put:
      summary: sort hangar_group
      tags:
      - HangarGroups
      responses:
        '200':
          description: successful
  "/images":
    get:
      summary: list images
      description: Get a List of Images
      tags:
      - Images
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Image"
  "/images/random":
    get:
      summary: random image
      description: Get a randomized List of Images
      tags:
      - Images
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Image"
  "/manufacturers":
    get:
      summary: list manufacturers
      tags:
      - Manufacturers
      responses:
        '200':
          description: successful
  "/manufacturers/with-models":
    get:
      summary: with_models manufacturer
      tags:
      - Manufacturers
      responses:
        '200':
          description: successful
  "/models":
    get:
      summary: list models
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/with-docks":
    get:
      summary: with_docks model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/unscheduled":
    get:
      summary: unscheduled model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/latest":
    get:
      summary: latest model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/slugs":
    get:
      summary: slugs model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/updated":
    get:
      summary: updated model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/filters":
    get:
      summary: filters model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/classifications":
    get:
      summary: classifications model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/production-states":
    get:
      summary: production_states model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/focus":
    get:
      summary: focus model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/sizes":
    get:
      summary: sizes model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/cargo-options":
    get:
      summary: cargo_options model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/embed":
    get:
      summary: embed model
      tags:
      - Models
      responses:
        '200':
          description: successful
  "/models/{slug}":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: show model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/hardpoints":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: hardpoints model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/images":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: images model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/videos":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: videos model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/variants":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: variants model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/loaners":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: loaners model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/snub-crafts":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: snub_crafts model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/modules":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: modules model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/upgrades":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: upgrades model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/paints":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: paints model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/store-image":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: store_image model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/models/{slug}/fleetchart-image":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: fleetchart_image model
      tags:
      - Models - Detail
      responses:
        '200':
          description: successful
  "/password":
    patch:
      summary: update password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
    put:
      summary: update password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
  "/password/request":
    post:
      summary: request_email password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
  "/password/update":
    patch:
      summary: update password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
    put:
      summary: update password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
  "/password/update/{reset_password_token}":
    parameters:
    - name: reset_password_token
      in: path
      description: reset_password_token
      required: true
      schema:
        type: string
    patch:
      summary: update_with_token password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
    put:
      summary: update_with_token password
      tags:
      - Passwords
      responses:
        '200':
          description: successful
  "/roadmap":
    get:
      summary: list roadmaps
      tags:
      - Roadmap
      responses:
        '200':
          description: successful
  "/roadmap/weeks":
    get:
      summary: weeks roadmap
      tags:
      - Roadmap
      responses:
        '200':
          description: successful
  "/search":
    get:
      summary: list searches
      tags:
      - Search
      responses:
        '200':
          description: successful
  "/sessions":
    post:
      summary: create session
      tags:
      - Sessions
      responses:
        '200':
          description: successful
    delete:
      summary: delete session
      tags:
      - Sessions
      responses:
        '200':
          description: successful
  "/sessions/confirm-access":
    post:
      summary: confirm_access session
      tags:
      - Sessions
      responses:
        '200':
          description: successful
  "/stations/{station_slug}/shops/{shop_slug}/commodities":
    parameters:
    - name: station_slug
      in: path
      description: station_slug
      required: true
      schema:
        type: string
    - name: shop_slug
      in: path
      description: shop_slug
      required: true
      schema:
        type: string
    get:
      summary: list shop_commodities
      tags:
      - ShopCommodities
      responses:
        '200':
          description: successful
  "/shop-commodities/commodity-type-options":
    get:
      summary: commodity_item_types shop_commodity
      tags:
      - ShopCommodities
      responses:
        '200':
          description: successful
  "/filters/shop-commodities/sub-categories":
    get:
      summary: sub_categories shop_commodity
      tags:
      - ShopCommodities
      responses:
        '200':
          description: successful
  "/shops":
    get:
      summary: list shops
      tags:
      - Shops
      responses:
        '200':
          description: successful
  "/stations/{station_slug}/shops/{slug}":
    parameters:
    - name: station_slug
      in: path
      description: station_slug
      required: true
      schema:
        type: string
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: show shop
      tags:
      - Shops
      responses:
        '200':
          description: successful
  "/shops/shop-types":
    get:
      summary: shop_types shop
      tags:
      - Shops
      responses:
        '200':
          description: successful
  "/starsystems":
    get:
      summary: list starsystems
      description: Get a List of Starsystems
      tags:
      - Starsystems
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Starsystem"
  "/starsystems/{slug}":
    get:
      summary: show starsystem
      parameters:
      - name: slug
        in: path
        description: slug
        schema:
          type: string
        required: true
      description: Get Detail of a Starsystem referenced by its Slug
      tags:
      - Starsystems
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Starsystem"
        '404':
          description: not_found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StandardError"
  "/stations":
    get:
      summary: list stations
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stations/{slug}":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: show station
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stations/{slug}/images":
    parameters:
    - name: slug
      in: path
      description: slug
      required: true
      schema:
        type: string
    get:
      summary: images station
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stations/ship-sizes":
    get:
      summary: ship_sizes station
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stations/station-types":
    get:
      summary: station_types station
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stations/classifications":
    get:
      summary: classifications station
      tags:
      - Stations
      responses:
        '200':
          description: successful
  "/stats/quick-stats":
    get:
      summary: quick_stats stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/models-per-month":
    get:
      summary: models_per_month stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/models-by-size":
    get:
      summary: models_by_size stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/models-by-production-status":
    get:
      summary: models_by_production_status stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/models-by-manufacturer":
    get:
      summary: models_by_manufacturer stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/models-by-classification":
    get:
      summary: models_by_classification stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/stats/components-by-class":
    get:
      summary: components_by_class stat
      tags:
      - Stats
      responses:
        '200':
          description: successful
  "/users/current":
    get:
      summary: current user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
    put:
      summary: update user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/signup":
    post:
      summary: signup user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/confirm":
    post:
      summary: confirm user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/check-email":
    post:
      summary: check_email user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/check-username":
    post:
      summary: check_username user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/current-account":
    put:
      summary: update_account user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
    patch:
      summary: update_account user
      tags:
      - CurrentUser
      responses:
        '200':
          description: successful
  "/users/{username}":
    parameters:
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    get:
      summary: public user
      tags:
      - Users
      responses:
        '200':
          description: successful
components:
  schemas:
    CelestialObject:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        designation:
          type: string
        storeImageIsFallback:
          type: boolean
        storeImage:
          type: string
          format: url
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        habitable:
          type: boolean
          nullable: true
        fairchanceact:
          type: boolean
          nullable: true
        subType:
          type: string
          nullable: true
        size:
          type: string
          nullable: true
        danger:
          type: integer
          nullable: true
        economy:
          type: integer
          nullable: true
        population:
          type: integer
          nullable: true
        locationLabel:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - name
      - slug
      - designation
      - createdAt
      - updatedAt
      title: CelestialObject
    CelestialObjectMinimal:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        designation:
          type: string
        storeImageIsFallback:
          type: boolean
        storeImage:
          type: string
          format: url
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        habitable:
          type: boolean
          nullable: true
        fairchanceact:
          type: boolean
          nullable: true
        subType:
          type: string
          nullable: true
        size:
          type: string
          nullable: true
        danger:
          type: integer
          nullable: true
        economy:
          type: integer
          nullable: true
        population:
          type: integer
          nullable: true
        locationLabel:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        starsystem:
          "$ref": "#/components/schemas/Starsystem"
        parent:
          "$ref": "#/components/schemas/CelestialObject"
          nullable: true
        moons:
          type: array
          items:
            "$ref": "#/components/schemas/CelestialObject"
      required:
      - starsystem
      title: CelestialObjectMinimal
    Commodity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        type:
          type: string
        typeLabel:
          type: string
        storeImageIsFallback:
          type: boolean
        storeImage:
          type: string
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        soldAt:
          "$ref": "#/components/schemas/ShopCommodity"
          nullable: true
        boughtAt:
          "$ref": "#/components/schemas/ShopCommodity"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - name
      - slug
      - storeImageIsFallback
      - createdAt
      - updatedAt
      title: Commodity
    CommodityPrice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        price:
          type: number
          format: float
        timeRange:
          type: string
          nullable: true
        type:
          type: string
        shopCommodityId:
          type: string
          format: uuid
        confirmed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - price
      - type
      - shop_commodity_id
      - confirmed
      - createdAt
      - updatedAt
      title: CommodityPrice
    Component:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        grade:
          type: string
        class:
          type: string
        size:
          type: string
        type:
          type: string
        typeLabel:
          type: string
        itemClass:
          type: string
        itemClassLabel:
          type: string
        trackingSignal:
          type: string
        trackingSignalLabel:
          type: string
        storeImageIsFallback:
          type: boolean
        storeImage:
          type: string
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        soldAt:
          "$ref": "#/components/schemas/ShopComponent"
          nullable: true
        boughtAt:
          "$ref": "#/components/schemas/ShopComponent"
          nullable: true
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - name
      - slug
      - storeImageIsFallback
      - createdAt
      - updatedAt
      title: Component
    Equipment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        grade:
          type: string
        size:
          type: string
        type:
          type: string
        typeLabel:
          type: string
        itemType:
          type: string
        itemTypeLabel:
          type: string
        weaponClass:
          type: string
        weaponClassLabel:
          type: string
        slot:
          type: string
        slotLabel:
          type: string
        damageReduction:
          type: string
        rateOfFire:
          type: string
        range:
          type: string
        extras:
          type: string
        storage:
          type: string
        storeImageIsFallback:
          type: boolean
        storeImage:
          type: string
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        soldAt:
          "$ref": "#/components/schemas/ShopEquipment"
          nullable: true
        boughtAt:
          "$ref": "#/components/schemas/ShopEquipment"
          nullable: true
        manufacturer:
          "$ref": "#/components/schemas/Manufacturer"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - name
      - slug
      - storeImageIsFallback
      - createdAt
      - updatedAt
      title: Equipment
    FieldError:
      type: object
      properties:
        attribute:
          type: string
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/StandardError"
      required:
      - attribute
      - messages
      title: FieldError
    FilterOption:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        category:
          type: string
        icon:
          type: string
          nullable: true
      required:
      - name
      - value
      - category
      title: FilterOption
    Gallery:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
      required:
      - id
      - name
      - slug
      title: Gallery
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        caption:
          type: string
        url:
          type: string
        width:
          type: string
        height:
          type: string
        type:
          type: string
        background:
          type: boolean
        smallUrl:
          type: string
        bigUrl:
          type: string
        gallery:
          "$ref": "#/components/schemas/Gallery"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - name
      - url
      - width
      - height
      - type
      - background
      - smallUrl
      - bigUrl
      - createdAt
      - updatedAt
      title: Image
    Manufacturer:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        code:
          type: string
        logo:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - name
      - slug
      - createdAt
      - updatedAt
      title: Manufacturer
    ShopCommodity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - id
      - name
      - slug
      - createdAt
      - updatedAt
      title: ShopCommodity
    StandardError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      title: StandardError
    Starsystem:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        storeImage:
          type: string
        storeImageLarge:
          type: string
        storeImageMedium:
          type: string
        storeImageSmall:
          type: string
        mapX:
          type: string
          nullable: true
        mapY:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        size:
          type: string
          nullable: true
        population:
          type: string
          nullable: true
        economy:
          type: string
          nullable: true
        danger:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        locationLabel:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - name
      - slug
      - createdAt
      - updatedAt
      title: Starsystem
    ValidationError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/FieldError"
      required:
      - code
      - message
      title: ValidationError
  parameters: {}
  securitySchemes: {}
  requestBodies: {}
  responses: {}
  headers: {}
  examples: {}
  links: {}
  callbacks: {}
