name: Release

on:
  push:
    tags:
      - '*'

env:
  RUBY_VERSION: 3.0.4

jobs:
  smoke-test:
    runs-on: ubuntu-latest

    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn cypress install
      - name: Run E2E Tests
        run: yarn run test:e2e --record --config baseUrl=https://stage.fleetyards.net --parallel

  # build:
  #   needs: [smoke-test]
  #   runs-on: ubuntu-latest

  #   env:
  #     RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  #     DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: ${{ env.RUBY_VERSION }}
  #         bundler-cache: true
  #     - uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
  #     - run: yarn install
  #     - run: mkdir -p log
  #     - name: Webpacker & Assets Compile
  #       run: NODE_ENV=production RAILS_ENV=ci bundle exec rails assets:precompile
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-
  #     - name: Set TAG_NAME
  #       run: echo "TAG_NAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: true
  #         tags: ghcr.io/fleetyards/app:${{ env.TAG_NAME }}

  deploy-to-live:
    needs: [smoke-test]
    runs-on: ubuntu-latest

    environment:
      name: Live
      url: https://fleetyards.net

    env:
      APP_SIGNAL_DEPLOY_HOOK: ${{ secrets.APP_SIGNAL_DEPLOY_HOOK }}
      GITHUB_USER: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: ignore
      - name: Deploy
        run: bundle exec cap live deploy
      - run: |
          curl -X POST $APP_SIGNAL_DEPLOY_HOOK \
          -H 'Content-Type: application/json' \
          -d "{\"revision\": \"$GITHUB_SHA\", \"user\": \"$GITHUB_USER\"}"

  create-release:
    needs: [deploy-to-live]
    runs-on: ubuntu-latest

    environment: Live

    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Set TAG_NAME
        run: echo "TAG_NAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: extract Changelog for the current Tag
        run: bundle exec thor changelog:entry $TAG_NAME
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.TAG_NAME }}
          body_path: ${{ env.TAG_NAME }}.md
          draft: false
          prerelease: false
      - run: |
          curl -X POST $DISCORD_WEBHOOK \
          -H 'Content-Type: application/json' \
          -d "{\"content\": \"**New Release:** $TAG_NAME\nhttps://github.com/fleetyards/fleetyards/releases/tag/$TAG_NAME\" }"
