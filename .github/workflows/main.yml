name: Main Action

on: [push]

jobs:
  yarn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - uses: actions/upload-artifact@v2
        with:
          name: yarn-bundle
          path: |
            node_modules
            .cache/Cypress

  bundle-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true
      - name: Update Audit DB
        run: bundle exec bundle-audit update
      - name: Check Audit DB
        run: bundle exec bundle-audit check

  yarn-audit:
    needs: yarn
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: yarn-bundle
      - run: yarn install
      - name: Check Audit DB
        run: yarn audit --groups dependencies

  # rubocop:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /root
  #     - run: bundle install
  #     - run:
  #         name: rubocoptering
  #         command: bundle exec rubocop --format progress

  # js-lint:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /root
  #     - run: yarn install
  #     - run: yarn run lint:js

  # style-lint:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /root
  #     - run: yarn install
  #     - run: yarn run lint:style
