/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * FleetYards.net Command API
 * OpenAPI spec version: v1
 */
import type { ModelExtendedAvailability } from "./modelExtendedAvailability";
import type { ModelExtendedCrew } from "./modelExtendedCrew";
import type { ModelExtendedLinks } from "./modelExtendedLinks";
import type { ModelLoaner } from "./modelLoaner";
import type { Manufacturer } from "./manufacturer";
import type { ModelExtendedMedia } from "./modelExtendedMedia";
import type { ModelExtendedMetrics } from "./modelExtendedMetrics";
import type { CargoHold } from "./cargoHold";
import type { FuelTank } from "./fuelTank";
import type { ModelProductionStatusEnum } from "./modelProductionStatusEnum";
import type { ModelExtendedSpeeds } from "./modelExtendedSpeeds";
import type { DockCount } from "./dockCount";

export interface ModelExtended {
  id: string;
  scIdentifier?: string;
  name: string;
  slug: string;
  availability: ModelExtendedAvailability;
  brochure?: string;
  classification?: string;
  classificationLabel?: string;
  crew: ModelExtendedCrew;
  description?: string;
  erkulIdentifier?: string;
  focus?: string;
  hasImages: boolean;
  hasModules: boolean;
  hasPaints: boolean;
  hasUpgrades: boolean;
  hasVideos: boolean;
  holo?: string;
  lastPledgePrice?: number;
  lastPledgePriceLabel?: string;
  lastUpdatedAt?: string;
  lastUpdatedAtLabel?: string;
  links: ModelExtendedLinks;
  loaners: ModelLoaner[];
  manufacturer?: Manufacturer;
  media: ModelExtendedMedia;
  metrics: ModelExtendedMetrics;
  cargoHolds?: CargoHold[];
  hydrogenFuelTanks?: FuelTank[];
  quantumFuelTanks?: FuelTank[];
  onSale: boolean;
  pledgePrice?: number;
  pledgePriceLabel?: string;
  price?: number;
  priceLabel?: string;
  productionNote?: string;
  productionStatus?: ModelProductionStatusEnum;
  rsiId?: number;
  rsiName?: string;
  rsiSlug?: string;
  speeds: ModelExtendedSpeeds;
  createdAt: string;
  updatedAt: string;
  hidden: boolean;
  active: boolean;
  scLength?: number;
  scBeam?: number;
  scHeight?: number;
  baseModelId?: string;
  dockCounts: DockCount[];
}
