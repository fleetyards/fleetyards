name: Main

on:
  push:
    branches: ["main", "staging", "trying"]
    tags-ignore:
      - "*.*"
    paths-ignore:
      - "CHANGELOG.md"
      - "config/version.rb"
      - "package.json"
  pull_request:
    branches: ["main"]
  merge_group:
  workflow_dispatch:

jobs:
  js-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/js-setup-action

  js-lint:
    needs: js-setup
    uses: ./.github/workflows/js-lint.job.yml

  js-prettier:
    needs: js-setup
    uses: ./.github/workflows/js-prettier.job.yml

  # js-tests:
  #   needs: js-setup
  #   uses: ./.github/workflows/js-tests.job.yml

  ruby-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

  ruby-lint:
    needs: ruby-setup
    uses: ./.github/workflows/ruby-lint.job.yml

  ruby-tests:
    needs: ruby-setup
    uses: ./.github/workflows/ruby-tests.job.yml

  ruby-api-tests:
    needs: ruby-setup
    uses: ./.github/workflows/ruby-api-tests.job.yml

  seeds:
    needs: ruby-setup
    uses: ./.github/workflows/seeds.job.yml

  # build:
  #   uses: ./.github/workflows/build.job.yml
  #   with:
  #     name: ${GITHUB_REF##*/}

  e2e-test:
    needs: [ruby-setup, js-setup]
    uses: ./.github/workflows/e2e.job.yml
    secrets: inherit

  deploy-to-stage:
    if: github.ref == 'refs/heads/main'
    needs: [
        ruby-lint,
        ruby-tests,
        ruby-api-tests,
        # js-tests,
        js-lint,
        js-prettier,
        seeds,
        e2e-test,
      ]
    uses: ./.github/workflows/deploy.job.yml
    with:
      capEnv: stage
      name: Stage
      url: https://{{ vars.STAGE_DOMAIN }}
    secrets: inherit

  notify-app_signal:
    runs-on: ubuntu-latest
    needs: [deploy-to-stage]
    environment: Stage
    env:
      APP_SIGNAL_DEPLOY_HOOK: ${{ secrets.APP_SIGNAL_DEPLOY_HOOK }}
    steps:
      - run: |
          curl -X POST $APP_SIGNAL_DEPLOY_HOOK \
          -H 'Content-Type: application/json' \
          -d "{\"revision\": \"$GITHUB_SHA\", \"user\": \"${{ github.actor }}\"}"

  notify-discord:
    runs-on: ubuntu-latest
    needs: [deploy-to-stage]
    environment: Stage
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - run: |
          curl -X POST $DISCORD_WEBHOOK \
          -H 'Content-Type: application/json' \
          -d "{\"content\": \"**New Stage Release:**\" }"
