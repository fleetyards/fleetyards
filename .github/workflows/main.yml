name: Main

on: [push]

jobs:
  ruby-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true

  js-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install

  bundle-audit:
    needs: ruby-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true
      - name: Update Audit DB
        run: bundle exec bundle-audit update
      - name: Check Audit DB
        run: bundle exec bundle-audit check

  yarn-audit:
    needs: js-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: Check Audit DB
        run: yarn audit --groups dependencies

  rubocop:
    needs: ruby-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true
      - name: rubocoptering
        run: bundle exec rubocop --format progress

  js-lint:
    needs: js-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn run lint:js

  style-lint:
    needs: js-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn run lint:style

  ruby-tests:
    needs: ruby-setup
    runs-on: ubuntu-latest

    env:
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      RAILS_ENV: test
      DATABASE_URL: postgresql://root:root@127.0.0.1:5432/fleetyards_test
      DATABASE_HOST: 127.0.0.1
      DATABASE_USER: root

    services:
      postgres:
        image: postgres:13.2-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_DB: fleetyards_test
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        # Add a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    # https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [8]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true
      - run: mkdir -p log
      - run: bundle exec rails db:create db:schema:load
      - name: Run tests
        env:
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        run: |
          bundle exec rake knapsack:minitest

  js-tests:
    needs: js-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: Run Javascript Tests
        run: yarn test:ci

  # seeds:
  #   <<: *seeds
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /root
  #     - run: bundle install
  #     - run: mkdir -p log
  #     - run: bundle exec rails db:create db:schema:load
  #     - run:
  #         name: Create ES Index
  #         command: bundle exec thor search:index
  #     - run:
  #         name: Run Seeds
  #         command: bundle exec rails db:seed

  # assets:
  #   <<: *ruby-defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /root
  #     - run: bundle install
  #     - run: yarn install
  #     - run:
  #         name: Webpacker & Assets Compile
  #         command: NODE_ENV=production RAILS_ENV=ci bundle exec rails assets:precompile
  #     - persist_to_workspace:
  #         root: /root
  #         paths:
  #           - app/public/assets
  #           - app/public/packs
  #           - app/tmp/cache/webpacker
